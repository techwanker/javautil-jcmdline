ut_condition_run_id_seq:
  sql:  ut_condition_run_id_seq
  sequence: true  
ut_condition_run_insert:
  sql: >
       insert into ut_condition_run (
            ut_condition_run_id,
            start_ts
       ) values ( 
          :ut_condition_run_id,
          :start_ts
       )
clean_run:
  sql:        "delete from ut_table_row_msg "
ut_condition_select:
  sql: >
        select ut_condition_id
        from ut_condition
        where
            condition_name          =         :rule_name and
            table_name              =         :table_name and
            condition_msg           =         :msg and
            sql_text                =         :sql_text and
            (narrative              =         :narrative or
             narrative is null and :narrative is null) and
            condition_severity      =         :severity and
            condition_format_str    =         :format_str
ut_condition_id_seq:
  sql:  ut_condition_id_seq
  sequence: true
ut_condition_insert:
  sql: >
        insert into ut_condition (
            ut_condition_id,    condition_name, table_name,         condition_msg,
            sql_text,           narrative,      condition_severity, condition_format_str
        ) values (
            :ut_condition_id, :rule_name,  :table_name,     :msg,
            :sql_text,       :narrative,  :severity,       :format_str
        )
ut_condition_run_parm_insert:
   sql: >
        insert into ut_condition_run_parm (
            ut_condition_run_id, parm_nm, parm_type, parm_value_str
        ) values (
           :UT_CONDITION_RUN_ID, :PARM_NM, :PARM_TYPE, :PARM_VALUE
        )
ut_condition_run_step_id_seq:
  sql: ut_condition_run_step_id_seq
  sequence: true
ut_condition_run_step_insert:
  sql:
        insert into ut_condition_run_step (
            ut_condition_run_step_id,
            ut_condition_id,
            ut_condition_run_id,
            start_ts
        ) values (
            :UT_CONDITION_RUN_STEP_ID,
            :UT_CONDITION_ID,
            :UT_CONDITION_RUN_ID,
            :START_TS
        ) 

ut_condition_row_msg_insert:       
  sql: >
       insert into ut_condition_row_msg (
           ut_condition_run_step_id,
           table_pk,
           condition_msg
       ) values (
           :UT_CONDITION_RUN_STEP_ID, :PRIMARY_KEY,
           :MSG
       )
