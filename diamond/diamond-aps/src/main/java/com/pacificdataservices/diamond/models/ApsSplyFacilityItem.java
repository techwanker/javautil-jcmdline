package com.pacificdataservices.diamond.models;
// Generated Feb 10, 2019 3:34:51 PM by Hibernate Tools 5.4.1.Final


import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ApsSplyFacilityItem generated by hbm2java
 */
@Entity
@Table(name="APS_SPLY_FACILITY_ITEM"
)
public class ApsSplyFacilityItem  implements java.io.Serializable {


     private ApsSplyFacilityItemId id;
     private ApsSplySubPool apsSplySubPool;
     private UtFacility utFacility;
     private IcItemMast icItemMast;
     private Date unallocCustOrdDt;
     private Date allocLateCustOrdDt;
     private Date unallocFcstDt;
     private Date allocLateFcstDt;
     private Date unallocReplenDt;
     private Short reschedReplenInDays;
     private Short reschedReplenOutDays;
     private BigDecimal onhandQty;

    public ApsSplyFacilityItem() {
    }

	
    public ApsSplyFacilityItem(ApsSplyFacilityItemId id, ApsSplySubPool apsSplySubPool, UtFacility utFacility, IcItemMast icItemMast) {
        this.id = id;
        this.apsSplySubPool = apsSplySubPool;
        this.utFacility = utFacility;
        this.icItemMast = icItemMast;
    }
    public ApsSplyFacilityItem(ApsSplyFacilityItemId id, ApsSplySubPool apsSplySubPool, UtFacility utFacility, IcItemMast icItemMast, Date unallocCustOrdDt, Date allocLateCustOrdDt, Date unallocFcstDt, Date allocLateFcstDt, Date unallocReplenDt, Short reschedReplenInDays, Short reschedReplenOutDays, BigDecimal onhandQty) {
       this.id = id;
       this.apsSplySubPool = apsSplySubPool;
       this.utFacility = utFacility;
       this.icItemMast = icItemMast;
       this.unallocCustOrdDt = unallocCustOrdDt;
       this.allocLateCustOrdDt = allocLateCustOrdDt;
       this.unallocFcstDt = unallocFcstDt;
       this.allocLateFcstDt = allocLateFcstDt;
       this.unallocReplenDt = unallocReplenDt;
       this.reschedReplenInDays = reschedReplenInDays;
       this.reschedReplenOutDays = reschedReplenOutDays;
       this.onhandQty = onhandQty;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="itemNbr", column=@Column(name="ITEM_NBR", nullable=false, precision=9, scale=0) ), 
        @AttributeOverride(name="facility", column=@Column(name="FACILITY", nullable=false, length=16) ), 
        @AttributeOverride(name="apsSplySubPoolNbr", column=@Column(name="APS_SPLY_SUB_POOL_NBR", nullable=false, precision=9, scale=0) ) } )
    public ApsSplyFacilityItemId getId() {
        return this.id;
    }
    
    public void setId(ApsSplyFacilityItemId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="APS_SPLY_SUB_POOL_NBR", nullable=false, insertable=false, updatable=false)
    public ApsSplySubPool getApsSplySubPool() {
        return this.apsSplySubPool;
    }
    
    public void setApsSplySubPool(ApsSplySubPool apsSplySubPool) {
        this.apsSplySubPool = apsSplySubPool;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="FACILITY", nullable=false, insertable=false, updatable=false)
    public UtFacility getUtFacility() {
        return this.utFacility;
    }
    
    public void setUtFacility(UtFacility utFacility) {
        this.utFacility = utFacility;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ITEM_NBR", nullable=false, insertable=false, updatable=false)
    public IcItemMast getIcItemMast() {
        return this.icItemMast;
    }
    
    public void setIcItemMast(IcItemMast icItemMast) {
        this.icItemMast = icItemMast;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="UNALLOC_CUST_ORD_DT", length=7)
    public Date getUnallocCustOrdDt() {
        return this.unallocCustOrdDt;
    }
    
    public void setUnallocCustOrdDt(Date unallocCustOrdDt) {
        this.unallocCustOrdDt = unallocCustOrdDt;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ALLOC_LATE_CUST_ORD_DT", length=7)
    public Date getAllocLateCustOrdDt() {
        return this.allocLateCustOrdDt;
    }
    
    public void setAllocLateCustOrdDt(Date allocLateCustOrdDt) {
        this.allocLateCustOrdDt = allocLateCustOrdDt;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="UNALLOC_FCST_DT", length=7)
    public Date getUnallocFcstDt() {
        return this.unallocFcstDt;
    }
    
    public void setUnallocFcstDt(Date unallocFcstDt) {
        this.unallocFcstDt = unallocFcstDt;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ALLOC_LATE_FCST_DT", length=7)
    public Date getAllocLateFcstDt() {
        return this.allocLateFcstDt;
    }
    
    public void setAllocLateFcstDt(Date allocLateFcstDt) {
        this.allocLateFcstDt = allocLateFcstDt;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="UNALLOC_REPLEN_DT", length=7)
    public Date getUnallocReplenDt() {
        return this.unallocReplenDt;
    }
    
    public void setUnallocReplenDt(Date unallocReplenDt) {
        this.unallocReplenDt = unallocReplenDt;
    }

    
    @Column(name="RESCHED_REPLEN_IN_DAYS", precision=3, scale=0)
    public Short getReschedReplenInDays() {
        return this.reschedReplenInDays;
    }
    
    public void setReschedReplenInDays(Short reschedReplenInDays) {
        this.reschedReplenInDays = reschedReplenInDays;
    }

    
    @Column(name="RESCHED_REPLEN_OUT_DAYS", precision=3, scale=0)
    public Short getReschedReplenOutDays() {
        return this.reschedReplenOutDays;
    }
    
    public void setReschedReplenOutDays(Short reschedReplenOutDays) {
        this.reschedReplenOutDays = reschedReplenOutDays;
    }

    
    @Column(name="ONHAND_QTY", precision=11)
    public BigDecimal getOnhandQty() {
        return this.onhandQty;
    }
    
    public void setOnhandQty(BigDecimal onhandQty) {
        this.onhandQty = onhandQty;
    }




}


