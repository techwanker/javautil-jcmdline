-- Generated by Ora2Pg, the Oracle database Schema converter, version 20.0
-- Copyright 2000-2019 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=localhost;service_name=xepdb1;port=1526
SET client_encoding TO 'UTF8';
SET
SET search_path = aerodemo;
SET
\set ON_ERROR_STOP ON
SET check_function_bodies = false;
SET
CREATE OR REPLACE VIEW aps_alloc_po_oo_sum (oe_ord_dtl_nbr, sum_alloc_qty_po, max_avail_dt_po, facility_rqst) AS SELECT  oe_ord_dtl_nbr,
        sum(aaro.alloc_qty) sum_alloc_qty_po,
        max(pod.replen_curr_est_dt)  max_avail_dt_po,
        min(facility_rqst) facility_rqst
    FROM aps_alloc_replen_oo aaro,
        po_line_dtl pod
   where pod.po_line_dtl_nbr = aaro.po_line_dtl_nbr
   group by oe_ord_dtl_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_queue_vw (item_nbr, dmd_oo_flg, dmd_fc_flg, dmd_wo_flg, sply_oh_flg, sply_po_flg, sply_wo_flg, rqst_tm) AS SELECT       item_nbr,
max(dmd_oo_flg)  dmd_oo_flg,
max(dmd_fc_flg)  dmd_fc_flg,
max(dmd_wo_flg)  dmd_wo_flg,
max(sply_oh_flg) sply_oh_flg,
max(sply_po_flg) sply_po_flg,
max(sply_wo_flg) sply_wo_flg,
min(rqst_tm)   rqst_tm
 FROM
APS_RQST_QUEUE
WHERE
aps_exception is null
group  by item_nbr
ORDER BY
 dmd_oo_flg  DESC,
 dmd_wo_flg  DESC,
 dmd_fc_flg  DESC,
 sply_po_flg DESC,
 sply_wo_flg DESC,
 sply_oh_flg DESC,
 item_nbr    ASC;
CREATE VIEW
CREATE OR REPLACE VIEW po_line_cert (po_line_hdr_nbr, item_nbr) AS SELECT  plmc.po_line_hdr_nbr,
        plmc.item_nbr
 FROM po_line_multiple_cert plmc,
     po_line_hdr plh
where plmc.po_line_Hdr_nbr = plh.po_line_hdr_nbr and
      plh.line_stat_id = 'O';
CREATE VIEW
CREATE OR REPLACE VIEW aps_dmd_oo (dmd_type_cd, dmd_cd, item_nbr_dmd, oe_ord_dtl_nbr, rqst_dt, prom_dt_curr, aps_src_rule_set_nbr, org_nbr_cust, open_qty, open_qty_adj, org_cd_cust, org_nbr_mfr_rqst, org_cd_mfr, contract_cust_flg, unit_price, cust_alloc_prty, rev_lvl, cntry_cd_origin, lot_not_expire_before_dt, lot_manufacture_after_dt, fcst_grp, ship_from_facility) AS SELECT  /*+ ordered use_nl (iii ood ) index (ood)  use_nl(ood ocm)
		use_nl(ood cust) use_nl (ood ooh) use_nl(ood pmm) */	  'OO' dmd_type_cd,
	  ooh.ord_type_cd || ooh.ord_cd || '-' || ood.line_nbr::varchar dmd_cd,
	  ood.item_nbr_ord item_nbr_dmd,
    	  ood.oe_ord_dtl_nbr,
   	  ood.rqst_dt,
	  ood.prom_dt_curr,
	  ood.aps_src_rule_set_nbr,
	  ood.org_nbr_cust,
	  coalesce(ood.qty_ord_stk_um, 0) - coalesce(ood.qty_ship_stk_um, 0) open_qty,
	  ood.qty_alloc_stk_um open_qty_adj,
          cust.org_cd org_cd_cust,
	  ood.org_nbr_mfr_rqst,
          pmm.org_cd org_cd_mfr,
	  CASE WHEN ood.contract_cd IS NULL THEN  'N'  ELSE 'Y' END  contract_cust_flg,
	  ood.unit_price_stk_um unit_price,
	  ocm.cust_alloc_prty cust_alloc_prty,
          ood.rev_lvl,
	  ood.cntry_cd_origin,
          ood.lot_not_expire_before_dt,
	  ood.lot_manufacture_after_dt,
	  (CASE WHEN ood.contract_cd IS NULL THEN  ocm.fcst_grp  ELSE (SELECT fcst_grp		       FROM oe_cust_contract occ		     WHERE occ.org_nbr_cust = ood.org_nbr_cust		       AND occ.contract_cd = ood.contract_cd) END
	  ) fcst_grp,
 		  ood.ship_from_facility
     FROM oe_ord_hdr ooh, oe_cust_mast ocm, na_org cust, oe_ord_dtl ood
LEFT OUTER JOIN na_org pmm ON (ood.org_nbr_mfr_rqst = pmm.org_nbr)
WHERE ood.oe_ord_hdr_nbr = ooh.oe_ord_hdr_nbr AND ood.org_nbr_cust = ocm.org_nbr_cust AND ood.org_nbr_cust = cust.org_nbr  AND ood.line_stat_id = 'O' AND coalesce(ood.qty_ord_stk_um, 0) - coalesce(ood.qty_ship_stk_um, 0) > 0 AND ood.cancel_cd IS NULL;
psql:aerodemo_view.sql:76: WARNING:  column "dmd_type_cd" has type "unknown"
DETAIL:  Proceeding with relation creation anyway.
CREATE VIEW
CREATE OR REPLACE VIEW po_mfr_mast_vw (org_nbr_mfr, org_cd, org_nm, stat_id, intro_dt, mail_to_addr_nbr_dflt, bill_to_addr_nbr_dflt, mfr_cage_cd) AS SELECT 
 pmm.ORG_NBR_MFR,
 no.org_cd,
 no.org_nm,
 pmm.STAT_ID,
 pmm.INTRO_DT,
 pmm.MAIL_TO_ADDR_NBR_DFLT,
 pmm.BILL_TO_ADDR_NBR_DFLT,
 pmm.MFR_CAGE_CD
 FROM po_mfr_mast pmm,
     na_org      no
where pmm.org_nbr_mfr= no.org_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW aps_alloc_wo_oo_sum (oe_ord_dtl_nbr, sum_alloc_qty_wo, max_avail_dt_wo, facility_rqst) AS SELECT  aawo.oe_ord_dtl_nbr,
        sum(aawo.alloc_qty) sum_alloc_qty_wo,
        max(wh.need_by_dt)  max_avail_dt_wo,
        min(facility_rqst) facility_rqst
    FROM aps_alloc_wo_oo  aawo,
        wo_hdr wh
   where wh.wo_hdr_nbr = aawo.wo_hdr_nbr
   group by aawo.oe_ord_dtl_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW aps_avail_wo (sply_identifier, item_nbr, facility, aps_sply_sub_pool_nbr, avail_dt, gross_avail_qty, wo_um, wo_hdr_nbr) AS SELECT  /*+ use_nl(iii woh) index (woh) */      woh.wo_hdr_nbr::varchar     sply_identifier,
      woh.item_nbr_rqst item_nbr,
      woh.facility,
      woh.aps_sply_sub_pool_nbr,
      woh.need_by_dt       avail_dt,
      woh.rqst_qty - coalesce(woh.fill_qty,0)  gross_avail_qty,
      woh.wo_um,
      woh.wo_hdr_nbr
     FROM
      wo_hdr   woh
    WHERE
      woh.wo_stat_id  = 'O';
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_sply_po (item_nbr_rqst) AS SELECT 	item_nbr
 FROM	po_ord_dtl
WHERE	sched_qty -  coalesce(recv_qty,0) > 0
  AND	line_stat_id = 'O'
  AND	sched_cancel_cd IS NULL;
CREATE VIEW
CREATE OR REPLACE VIEW vq_qte_vw (vq_qte_hdr_nbr, vq_qte_cd, org_nbr_vnd, vq_qte_dt, org_cd, org_nm, curr_cd_qte, indiv_nm_spoken_to, indiv_phn_nbr, indiv_fax_nbr, indiv_email_addr, vq_qte_eff_dt, vq_qte_exp_dt, vnd_qte_ref_cd, vq_qte_indiv_nbr, transmit_flg, vq_qte_dtl_nbr, item_nbr_qte, item_cd_qte, item_cd_vnd, qte_um, qte_qty, qte_qty_stk_um, qte_cost, qte_cost_denom, qte_cost_stk_um, qte_cost_denom_stk_um, org_nbr_mfr_rqst, rev_lvl, rqst_dt, lead_tm_wk_prom, prom_dt, vq_lost_cd) AS SELECT 
    vqh.VQ_QTE_HDR_NBR,
    vqh.VQ_QTE_CD,
    vqh.ORG_NBR_VND,
    vqh.VQ_QTE_DT,
    no.org_cd,
    no.org_nm,
    vqh.CURR_CD_QTE,
    vqh.INDIV_NM_SPOKEN_TO,
    vqh.INDIV_PHN_NBR,
    vqh.INDIV_FAX_NBR,
    vqh.INDIV_EMAIL_ADDR,
    vqh.VQ_QTE_EFF_DT,
    vqh.VQ_QTE_EXP_DT,
    vqh.VND_QTE_REF_CD,
    vqh.VQ_QTE_INDIV_NBR,
    vqh.TRANSMIT_FLG,
    vqd.VQ_QTE_DTL_NBR,
    vqd.ITEM_NBR_QTE,
    vqd.ITEM_CD_QTE,
    vqd.ITEM_CD_VND,
    vqd.QTE_UM,
    vqd.QTE_QTY,
    vqd.QTE_QTY_STK_UM,
    vqd.QTE_COST,
    vqd.QTE_COST_DENOM,
    vqd.QTE_COST_STK_UM,
    vqd.QTE_COST_DENOM_STK_UM,
    vqd.ORG_NBR_MFR_RQST,
    vqd.REV_LVL,
    vqd.RQST_DT,
    vqd.LEAD_TM_WK_PROM,
    vqd.PROM_DT,
    vqd.VQ_LOST_CD
 FROM 
    vq_qte_hdr vqh,
    vq_qte_dtl vqd,
    na_org     no
where 
    vqh.vq_qte_hdr_nbr = vqd.vq_qte_hdr_nbr and
    vqh.org_nbr_vnd = no.org_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_dmd_oo (item_nbr_ord) AS SELECT  item_nbr_ord
 FROM oe_ord_dtl
WHERE qty_ord - coalesce(qty_ship,0) > 0
AND line_stat_id = 'O';
CREATE VIEW
/*
CREATE OR REPLACE VIEW item_stat_qtr_sales (item_nbr, item_cd, item_descr, fcst_grp, oe_ord_dtl_cnt, distinct_cust_cnt, qty_ord, rqst_dt_mm) AS SELECT 
     iim.item_nbr,
     iim.item_cd,
     iim.item_descr,
     ocm.fcst_grp,
     count(ood.oe_ord_dtl_nbr) oe_ord_dtl_cnt ,
     count(distinct(ocm.org_nbr_cust)) distinct_cust_cnt,
     sum(ood.qty_ord) qty_ord  ,
     trunc(ood.rqst_dt,'MM') rqst_dt_mm
 FROM oe_ord_dtl_hist ood,
     oe_cust_mast ocm,
     ic_item_mast iim
group by
     iim.item_nbr,
     iim.item_cd,
     iim.item_descr,
     ocm.fcst_grp,
     trunc(ood.rqst_dt,'MM');A
*/
CREATE OR REPLACE VIEW aps_rqst_dmd_wo (item_nbr_ord) AS SELECT 	item_nbr_component
 FROM	wo_dtl		wod
WHERE	EXISTS (SELECT	'x'
				FROM	wo_hdr	woh
				WHERE	woh.wo_hdr_nbr	=	wod.wo_hdr_nbr
				  AND	woh.wo_stat_id	=	'O'
				  AND	coalesce(rqst_qty,0) - coalesce(fill_qty,0) > 0 );
CREATE VIEW
CREATE OR REPLACE VIEW fc_fcst_mnth_vw (fc_item_mast_nbr, m1_raw, m1_adj, m1v, m2_raw, m2_adj, m2v, m3_raw, m3_adj, m3v, m4_raw, m4_adj, m4v, m5_raw, m5_adj, m5v, m6_raw, m6_adj, m6v, m7_raw, m7_adj, m7v, m8_raw, m8_adj, m8v, m9_raw, m9_adj, m9v, m10_raw, m10_adj, m10v, m11_raw, m11_adj, m11v, m12_raw, m12_adj, m12v) AS SELECT 	fc_item_mast_nbr,
		SUM(mnth_1_raw)		m1_raw,
		SUM(mnth_1_adj)		m1_adj,
		SUM(mnth_1_value)	m1v,
		SUM(mnth_2_raw)		m2_raw,
		SUM(mnth_2_adj)		m2_adj,
		SUM(mnth_2_value)	m2v,
		SUM(mnth_3_raw)		m3_raw,
		SUM(mnth_3_adj)		m3_adj,
		SUM(mnth_3_value)	m3v,
		SUM(mnth_4_raw)		m4_raw,
		SUM(mnth_4_adj)		m4_adj,
		SUM(mnth_4_value)	m4v,
		SUM(mnth_5_raw)		m5_raw,
		SUM(mnth_5_adj)		m5_adj,
		SUM(mnth_5_value)	m5v,
		SUM(mnth_6_raw)		m6_raw,
		SUM(mnth_6_adj)		m6_adj,
		SUM(mnth_6_value)	m6v,
		SUM(mnth_7_raw)		m7_raw,
		SUM(mnth_7_adj)		m7_adj,
		SUM(mnth_7_value)	m7v,
		SUM(mnth_8_raw)		m8_raw,
		SUM(mnth_8_adj)		m8_adj,
		SUM(mnth_8_value)	m8v,
		SUM(mnth_9_raw)		m9_raw,
		SUM(mnth_9_adj)		m9_adj,
		SUM(mnth_9_value)	m9v,
		SUM(mnth_10_raw)	m10_raw,
		SUM(mnth_10_adj)	m10_adj,
		SUM(mnth_10_value)	m10v,
		SUM(mnth_11_raw)	m11_raw,
		SUM(mnth_11_adj)	m11_adj,
		SUM(mnth_11_value)	m11v,
		SUM(mnth_12_raw)	m12_raw,
		SUM(mnth_12_adj)	m12_adj,
		SUM(mnth_12_value)	m12v
 FROM (
		SELECT	/*+ index fim */				fim.fc_item_mast_nbr,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_1_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_1_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um END 							mnth_1_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '1 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_2_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '1 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_2_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '1 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_2_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '2 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_3_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '2 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_3_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '2 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_3_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '3 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_4_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '3 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_4_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '3 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_4_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '4 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_5_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '4 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_5_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '4 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_5_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '5 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_6_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '5 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_6_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '5 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_6_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '6 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_7_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '6 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_7_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '6 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_7_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '7 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_8_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '7 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_8_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '7 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_8_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '8 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_9_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '8 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_9_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '8 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_9_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '9 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_10_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '9 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_10_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '9 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_10_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '10 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_11_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '10 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_11_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '10 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_11_value,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '11 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.raw_fcst END 										mnth_12_raw,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '11 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							ff.adj_fcst END 										mnth_12_adj,
				CASE WHEN TO_CHAR(LOCALTIMESTAMP + '11 month'::interval, 'RRRR/MM')=TO_CHAR(ff.fc_fcst_dt, 'RRRR/MM') THEN 							coalesce(coalesce(adj_fcst, raw_fcst),0) *								fim.unit_cost_stk_um  ELSE 0 END 						mnth_12_value
		FROM
				fc_fcst				ff,
				fc_item_fcst_mdl	fifm,
				fc_item_mast		fim
		WHERE
				ff.fc_item_fcst_mdl_nbr		=	fifm.fc_item_fcst_mdl_nbr
		  AND	fifm.chosen_flg				=	'Y'
		  AND	ff.fc_item_mast_nbr			=	fim.fc_item_mast_nbr
		  AND	fim.fc_item_mast_stat_id	=	'A' ) alias132
GROUP BY fc_item_mast_nbr;
CREATE VIEW
/*
CREATE OR REPLACE VIEW item_cust_mth_sale (item_nbr_rqst, org_nbr_cust, oe_ord_dtl_cnt, qty_ord, rqst_dt_mm) AS SELECT 
     ood.item_nbr_rqst,
     ood.org_nbr_cust,
     count(ood.oe_ord_dtl_nbr) oe_ord_dtl_cnt ,
     sum(ood.qty_ord) qty_ord  ,
     trunc(ood.rqst_dt,'MM') rqst_dt_mm
 FROM oe_ord_dtl_hist ood
group by
     ood.item_nbr_rqst,
     ood.org_nbr_cust,
     trunc(ood.rqst_dt,'MM');
*/ 
CREATE OR REPLACE VIEW aps_dmd_fc (
    dmd_type_cd, dmd_cd, item_nbr_dmd, fc_fcst_nbr, rqst_dt, 
    aps_src_rule_set_nbr, org_nbr_cust, org_cd_cust, 
    open_qty, contract_cust_flg, cust_alloc_prty, 
    rev_lvl, org_nbr_mfr_rqst, --identifier, 
    fc_item_mast_nbr, fcst_grp) 
AS SELECT  /*+ ordered index use_nl(iii fim)  use_nl(fim ff) */      'FC'                            dmd_type_cd,
      'FC' || fim.fc_item_mast_nbr || ' ' || ff.cycle || '/' || ff.intvl     dmd_cd,
      fim.item_nbr         item_nbr_dmd,
      ff.fc_fcst_nbr         fc_fcst_nbr,
      TO_DATE(ff.cycle::varchar || '/' || ff.intvl::varchar, 'yyyy/mm')    rqst_dt,
      fim.aps_src_rule_set_nbr,
      fim.org_nbr_cust,
      no.org_cd          org_cd_cust,
      coalesce(ff.adj_fcst,ff.raw_fcst)     open_qty,
      NULL           contract_cust_flg,
      coalesce(ocm.cust_alloc_prty, 999)     cust_alloc_prty,
      fim.rev_lvl,
      fim.org_nbr_mfr_rqst,
      --ff.ROWID          identifier,
      fim.fc_item_mast_nbr,
      fim.fcst_grp
 FROM
  fc_item_mast  fim,
  fc_fcst    ff,
  oe_cust_mast  ocm,
  na_org    no
WHERE
  ff.fc_item_mast_nbr  = fim.fc_item_mast_nbr
  AND fim.org_nbr_cust  = ocm.org_nbr_cust
  AND no.org_nbr    = ocm.org_nbr_cust
  and coalesce(ff.adj_fcst,ff.raw_fcst) > 0;
psql:aerodemo_view.sql:327: WARNING:  column "dmd_type_cd" has type "unknown"
DETAIL:  Proceeding with relation creation anyway.
psql:aerodemo_view.sql:327: WARNING:  column "contract_cust_flg" has type "unknown"
DETAIL:  Proceeding with relation creation anyway.
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_sply_wo (item_nbr_rqst) AS SELECT 	item_nbr_rqst
 FROM	wo_hdr
WHERE	rqst_qty - coalesce(fill_qty,0) > 0
  AND	wo_stat_id = 'O';
CREATE VIEW
CREATE OR REPLACE VIEW sq_qte_vw (sq_qte_dtl_nbr, org_nbr_cust, org_nm_cust, sq_qte_eff_dt, item_nbr_qte, item_cd_qte, qte_qty_stk_um, qte_price_stk_um, sq_lost_cd) AS SELECT 
    sqd.sq_qte_dtl_nbr,
    sqh.org_nbr_cust,
    sqh.org_nm_cust,
    sqh.sq_qte_eff_dt,
    sqd.item_nbr_qte,
    sqd.item_cd_qte,
    sqd.qte_qty_stk_um,
    sqd.qte_price_stk_um,
    sqd.sq_lost_cd
 FROM
    sq_qte_hdr sqh,
    sq_qte_dtl  sqd
where sqh.sq_qte_hdr_nbr = sqd.sq_qte_hdr_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW aps_avail_onhand_dtl (facility, aps_sply_sub_pool_nbr, org_nbr_mfr, org_nbr_vnd, lot_nbr, lot_um, item_nbr, avail_dt, onhand_qty, rev_lvl, pk_supply, sply_identifier, lot_cost, cntry_cd_origin, mfr_date, expire_dt, rcpt_dt, avail_dt_id) AS SELECT 
  ib.facility,
  iil.aps_sply_sub_pool_nbr,
  ilm.org_nbr_mfr,
  ilm.org_nbr_vnd,
  iil.lot_nbr,
  ilm.lot_cost_um,
  ilm.item_nbr,
  --TRUNC(coalesce(iil.avail_dt, LOCALTIMESTAMP)), -- ora2pg as of 2019/07/30 from oracle 18 
  date_trunc('day'::text, COALESCE(iil.avail_dt, ('now'::text)::timestamp without time zone)), --  from oracle 12
   iilb.box_qty     onhand_qty,
  ilm.rev_lvl,
  ilm.lot_nbr pk_supply,
  iil.lot_nbr::varchar || '-' || aps_sply_sub_pool_nbr::varchar || '-' || ib.facility  sply_identifier,
  ilm.lot_cost,
  ilm.cntry_cd_origin,
  ilm.mfr_date,
  ilm.expire_dt,
  ilm.rcpt_dt,
  CASE WHEN iil.avail_dt IS NULL THEN  'F'  ELSE 'P' END 	avail_dt_id
 FROM
  ic_lot_mast  ilm,
  ic_item_loc   iil,
  ic_bin    ib,
  ic_item_loc_box  iilb
WHERE
  ilm.QTY_ON_HAND_FLG = 'Y' and
  iil.ic_item_loc_nbr  = iilb.ic_item_loc_nbr
  AND iil.bin_nbr    = ib.bin_nbr
  AND ilm.lot_nbr    = iil.lot_nbr
  AND iilb.box_stat_Id != 'LST';
CREATE VIEW
CREATE OR REPLACE VIEW oe_item_hist_fcst_grp (item_nbr_rqst, item_cd, ord_dt_mm, qty_ord_sum, fcst_grp) AS SELECT 
     h.ITEM_NBR_RQST,
     iim.item_cd,
--     trunc(h.ORD_DT,'MM') ord_dt_mm,
     extract(month from h.ORD_DT) ord_dt_mm,
     sum(h.QTY_ORD) qty_ord_sum,
     h.fcst_grp
 FROM
     oe_ord_dtl_hist_fcst_grp h,
     ic_item_mast iim
where h.item_nbr_rqst = iim.item_nbr
group by
     h.ITEM_NBR_RQST,
     iim.item_cd,
     --trunc(h.ORD_DT,'MM') , -- ora2pg
     extract(month from h.ORD_DT) ,
     h.fcst_grp;
CREATE VIEW
CREATE OR REPLACE VIEW aps_dmd_ss (dmd_type_cd, dmd_cd, item_nbr_dmd, item_nbr_alloc_rqst, fc_item_mast_nbr, rqst_dt, aps_src_rule_set_nbr, org_nbr_cust, org_cd_cust, open_qty, open_qty_adj, contract_cust_flg, cust_alloc_prty, rev_lvl, org_nbr_mfr_rqst, fcst_grp) AS SELECT  /*+ ordered use_nl(iii, fim) use_nl(fim, ocm) use_nl(na, fim) */      'SS'        dmd_type_cd,
      'SS' || fim.item_nbr    dmd_cd,
      fim.item_nbr      item_nbr_dmd,
      fim.item_nbr      item_nbr_alloc_rqst,
      fim.fc_item_mast_nbr,
      date_trunc('day', LOCALTIMESTAMP)      rqst_dt,
      fim.aps_src_rule_set_nbr,
      fim.org_nbr_cust,
      na.org_cd       org_cd_cust,
      safety_stk_adj      open_qty,
      safety_stk_alloc_qty    open_qty_adj,
      ocm.contract_cust_flg,
      coalesce(ocm.cust_alloc_prty, 999)  cust_alloc_prty,
      fim.rev_lvl,
      fim.org_nbr_mfr_rqst,
      fim.fcst_grp
     FROM
      fc_item_mast fim,
      oe_cust_mast ocm,
      na_org   na
    WHERE
      fim.org_nbr_cust = ocm.org_nbr_cust
      AND fim.org_nbr_cust = na.org_nbr
      AND coalesce(fim.safety_stk_adj,0) > 0;
psql:aerodemo_view.sql:424: WARNING:  column "dmd_type_cd" has type "unknown"
DETAIL:  Proceeding with relation creation anyway.
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_sply_oh (item_nbr_rqst) AS SELECT 	item_nbr
 FROM	ic_item_loc,
		ic_lot_mast
WHERE	ic_item_loc.lot_nbr = ic_lot_mast.lot_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW aps_avail_replen (sply_identifier, item_nbr, facility, aps_sply_sub_pool_nbr, org_nbr_mfr, org_nbr_vnd, avail_dt, gross_avail_qty, replen_um, rev_lvl, po_line_dtl_nbr, unit_cost_stk_um, cntry_cd_origin, lot_manufacture_after_dt, lot_not_expire_before_dt, aps_avail_dt, po_line_hdr_nbr) AS SELECT  poh.po_cd || '-' || lpad(plh.po_line_nbr::varchar,2,'0') sply_identifier,
  plh.item_nbr,
  pld.facility,
  pld.aps_sply_sub_pool_nbr,
  plh.org_nbr_mfr,
  poh.org_nbr_vnd,
  coalesce(pld.aps_avail_dt, pld.replen_curr_est_dt)  avail_dt,
  coalesce(pld.sched_qty_stk_um,0) - coalesce(pld.recv_qty_stk_um,0)  gross_avail_qty,
  plh.replen_um,
  plh.rev_lvl,
  pld.po_line_dtl_nbr,
  plh.unit_cost_stk_um,
  plh.cntry_cd_origin,
  plh.lot_manufacture_after_dt,
  plh.lot_not_expire_before_dt,
  pld.aps_avail_dt,
  plh.po_line_hdr_nbr
 FROM
  po_ord_hdr   poh,
  po_line_hdr  plh,
  po_line_dtl  pld
WHERE
  plh.po_ord_hdr_nbr  = poh.po_ord_hdr_nbr
  AND pld.po_line_hdr_nbr  = plh.po_line_hdr_nbr
  AND plh.line_stat_id  = 'O'
  AND coalesce(pld.sched_qty,0) - coalesce(pld.recv_qty,0) > 0
  AND pld.cancel_cd IS NULL;
CREATE VIEW
CREATE OR REPLACE VIEW aps_alloc_onhand_oo_sum (oe_ord_dtl_nbr, sum_alloc_qty_oh, max_avail_dt_oh, facility_rqst) AS SELECT  oe_ord_dtl_nbr,
        sum(alloc_qty) sum_alloc_qty_oh,
        max(avail_dt)  max_avail_dt_oh,
        min(facility_rqst) facility_rqst
    FROM aps_alloc_onhand_oo
   group by oe_ord_dtl_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW oe_cust_mast_id_vw (org_nbr, org_cd, org_nm, fcst_grp) AS SELECT 
 no.org_nbr,
 no.org_cd,
 no.org_nm,
 ocm.fcst_grp
 FROM oe_cust_mast ocm,
     na_org no
where no.org_nbr = ocm.org_nbr_cust;
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_dmd_fc (item_nbr_ord) AS SELECT 	item_nbr
 FROM	fc_item_mast;
CREATE VIEW
CREATE OR REPLACE VIEW aps_dmd_wo (dmd_type_cd, dmd_cd, item_nbr_dmd, wo_dtl_nbr, need_by_dt, aps_src_rule_set_nbr, org_nbr_cust, org_cd_cust, org_nbr_mfr_rqst, org_cd_mfr_rqst, rev_lvl, open_qty, open_qty_adj, fcst_grp, mix_mfr_lot_flg, component_qty_per_unit, cust_alloc_prty) AS SELECT  /*+ ordered use_nl (iii wod) use_nl(wod woh) use_nl(woh ocm)
   use_nl(wod mfr) */	  'WO' dmd_type_cd,
	  'WO' || woh.wo_hdr_nbr::varchar dmd_cd,
	  wod.item_nbr_component item_nbr_dmd,
	  wod.wo_dtl_nbr wo_dtl_nbr,
	  woh.need_by_dt,
	  woh.aps_src_rule_set_nbr,
	  woh.org_nbr_cust,
	  cust.org_cd org_cd_cust,
		wod.org_nbr_mfr_rqst,
		mfr.org_cd org_cd_mfr_rqst,
	  wod.rev_lvl,
	    (coalesce(woh.rqst_qty, 0) - coalesce(woh.fill_qty, 0))
	  * coalesce(wod.component_qty_per_unit, 0) open_qty,
	  qty_alloc_stk_um open_qty_adj, ocm.fcst_grp, wod.mix_mfr_lot_flg,
	  wod.component_qty_per_unit, ocm.cust_alloc_prty
      FROM wo_hdr woh, oe_cust_mast ocm, na_org cust, wo_dtl wod
LEFT OUTER JOIN na_org mfr ON (wod.org_nbr_mfr_rqst = mfr.org_nbr)
WHERE wod.wo_hdr_nbr = woh.wo_hdr_nbr AND woh.org_nbr_cust = cust.org_nbr  AND woh.wo_stat_id = 'O' AND woh.org_nbr_cust = ocm.org_nbr_cust;
psql:aerodemo_view.sql:496: WARNING:  column "dmd_type_cd" has type "unknown"
DETAIL:  Proceeding with relation creation anyway.
CREATE VIEW
/*
CREATE OR REPLACE VIEW item_stat_mth_sale (item_nbr_rqst, item_cd, item_descr, fcst_grp, oe_ord_dtl_cnt, distinct_cust_cnt, qty_ord, rqst_dt_mm) AS SELECT 
     ood.item_nbr_rqst,
     iim.item_cd,
     iim.item_descr,
     ocm.fcst_grp,
     count(ood.oe_ord_dtl_nbr) oe_ord_dtl_cnt ,
     count(distinct(ocm.org_nbr_cust)) distinct_cust_cnt,
     sum(ood.qty_ord) qty_ord  ,
     trunc(ood.rqst_dt,'MM') rqst_dt_mm
 FROM oe_ord_dtl_hist ood,
     oe_cust_mast ocm,
     ic_item_mast iim
where ood.org_nbr_cust = ocm.org_nbr_cust and
      iim.item_Nbr = ood.item_nbr_rqst
group by
     ood.item_nbr_rqst,
     iim.item_cd,
     iim.item_descr,
     ocm.fcst_grp,
     trunc(ood.rqst_dt,'MM');
*/
CREATE OR REPLACE VIEW aps_plan_grp_dmd (plan_grp_nbr, item_nbr_cnt, item_nbr) AS SELECT 
    plan_grp_nbr,
    count(*) item_Nbr_cnt,
    item_nbr
 FROM
    aps_plan_grp,
    aps_dmd_oo
where aps_dmd_oo.item_nbr_dmd = aps_plan_grp.item_Nbr
group by item_nbr, plan_grp_nbr
order by plan_grp_nbr, item_nbr;
CREATE VIEW
CREATE OR REPLACE VIEW aps_avail_onhand (facility, aps_sply_sub_pool_nbr, org_nbr_mfr, org_nbr_vnd, lot_nbr, lot_um, item_nbr, avail_dt, gross_avail_qty, rev_lvl, pk_supply, sply_identifier, lot_cost, cntry_cd_origin, mfr_date, expire_dt, rcpt_dt, avail_dt_id) AS SELECT  facility,
  aps_sply_sub_pool_nbr,
  org_nbr_mfr,
  org_nbr_vnd,
  lot_nbr,
  lot_um,
  item_nbr,
  avail_dt,
  SUM(onhand_qty)     gross_avail_qty,
  rev_lvl,
  pk_supply,
  sply_identifier,
  lot_cost,
  cntry_cd_origin,
  mfr_date,
  expire_dt,
  rcpt_dt,
  avail_dt_id
 FROM
  aps_avail_onhand_dtl
GROUP BY
  facility,
  aps_sply_sub_pool_nbr,
  org_nbr_mfr,
  org_nbr_vnd,
  lot_nbr,
  lot_um,
  item_nbr,
  avail_dt,
  rev_lvl,
  pk_supply,
  sply_identifier,
  lot_cost,
  cntry_cd_origin,
  mfr_date,
  expire_dt,
  rcpt_dt,
  avail_dt_id;
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_dtl (item_nbr, dmd_oo_flg, dmd_fc_flg, dmd_wo_flg, sply_oh_flg, sply_po_flg, sply_wo_flg) AS SELECT 	item_nbr_ord		item_nbr,
		'Y' 				dmd_oo_flg,
		NULL::varchar		dmd_fc_flg,
		NULL::varchar		dmd_wo_flg,
		NULL::varchar		sply_oh_flg,
		NULL::varchar		sply_oh_flg,
		NULL::varchar		sply_wo_flg
 FROM	aps_rqst_dmd_oo
UNION ALL
SELECT	item_nbr_ord		item_nbr,
		NULL::varchar 		dmd_oo_flg,
		'Y'					dmd_fc_flg,
		NULL::varchar		dmd_wo_flg,
		NULL::varchar		sply_oh_flg,
		NULL::varchar		sply_oh_flg,
		NULL::varchar		sply_wo_flg
FROM	aps_rqst_dmd_fc
UNION ALL
SELECT	item_nbr_ord		item_nbr,
		NULL::varchar 		dmd_oo_flg,
		NULL::varchar		dmd_fc_flg,
		'Y'					dmd_wo_flg,
		NULL::varchar		sply_oh_flg,
		NULL::varchar		sply_oh_flg,
		NULL::varchar		sply_wo_flg
FROM	aps_rqst_dmd_wo
UNION ALL
SELECT	item_nbr_rqst,
		NULL::varchar		dmd_oo_flg,
		NULL::varchar		dmd_fc_flg,
		NULL::varchar		dmd_wo_flg,
		'Y'					sply_oh_flg,
		NULL::varchar		sply_po_flg,
		NULL::varchar		sply_wo_flg
FROM	aps_rqst_sply_oh
UNION ALL
SELECT	item_nbr_rqst,
		NULL::varchar		dmd_oo_flg,
		NULL::varchar		dmd_fc_flg,
		NULL::varchar		dmd_wo_flg,
		NULL::varchar		sply_oh_flg,
		'Y'					sply_po_flg,
		NULL::varchar		sply_wo_flg
FROM	aps_rqst_sply_po
UNION ALL
SELECT	item_nbr_rqst,
		NULL::varchar		dmd_oo_flg,
		NULL::varchar		dmd_fc_flg,
		NULL::varchar		dmd_wo_flg,
		NULL::varchar		sply_oh_flg,
		NULL::varchar		sply_po_flg,
		'Y'					sply_wo_flg
FROM	aps_rqst_sply_wo;
CREATE VIEW
CREATE OR REPLACE VIEW aps_alloc_oo_sum (oe_ord_dtl_nbr, sum_alloc_qty_oh, max_avail_dt_oh, sum_alloc_qty_po, max_avail_dt_po, sum_alloc_qty_wo, max_avail_dt_wo, max_avail_dt, alloc_qty, facility_rqst, prom_dt_curr, org_nbr_mfr_rqst, org_nbr_cust, aps_src_rule_set_nbr, alloc_rqst_qty, item_nbr_rqst) AS SELECT  od.oe_ord_dtl_nbr,
       oh.sum_alloc_qty_oh,
       oh.max_avail_dt_oh,
       po.sum_alloc_qty_po,
       po.max_avail_dt_po,
       wo.sum_alloc_qty_wo,
       wo.max_avail_dt_wo,
       greatest(oh.max_avail_dt_oh,po.max_avail_dt_po,wo.max_avail_dt_wo) max_avail_dt,
       coalesce(oh.sum_alloc_qty_oh,0) +
       coalesce(po.sum_alloc_qty_po,0) +
       coalesce(wo.sum_alloc_qty_wo,0) alloc_qty,
       least(oh.facility_rqst,po.facility_rqst,wo.facility_rqst) facility_rqst,
       od.prom_dt_curr,
       od.org_nbr_mfr_rqst,
       od.org_nbr_cust,
       od.aps_src_rule_set_nbr,
       od.qty_ord - coalesce(qty_ship,0) alloc_rqst_qty,
       od.item_nbr_rqst
 FROM oe_ord_dtl od
LEFT OUTER JOIN aps_alloc_onhand_oo_sum oh ON (od.oe_ord_dtl_nbr = oh.oe_ord_dtl_nbr)
LEFT OUTER JOIN aps_alloc_po_oo_sum po ON (od.oe_ord_dtl_nbr = po.oe_ord_dtl_nbr)
LEFT OUTER JOIN aps_alloc_wo_oo_sum wo ON (od.oe_ord_dtl_nbr = wo.oe_ord_dtl_nbr)
WHERE od.line_stat_id = 'O';
CREATE VIEW
CREATE OR REPLACE VIEW aps_rqst_grp (item_nbr, dmd_oo_flg, dmd_fc_flg, dmd_wo_flg, sply_oh_flg, sply_po_flg, sply_wo_flg) AS SELECT 	item_nbr,
		coalesce(MAX(dmd_oo_flg),'N')	dmd_oo_flg,
		coalesce(MAX(dmd_fc_flg),'N')	dmd_fc_flg,
		coalesce(MAX(dmd_wo_flg),'N')	dmd_wo_flg,
		coalesce(MAX(sply_oh_flg),'N')	sply_oh_flg,
		coalesce(MAX(sply_po_flg),'N')	sply_po_flg,
		coalesce(MAX(sply_wo_flg),'N')	sply_wo_flg
 FROM	aps_rqst_dtl
GROUP BY item_nbr;
CREATE VIEW
