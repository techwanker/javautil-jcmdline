ABC - Pareto
============

Purpose
-------

Concentrate inventory and dollars on

-  high volume,

-  high profit item

-  highest service level

-  core products 

-  JIT / SLA / KITS
Metric

Assumptions
-----------

Users wish to quickly summarize the characteristics of an item


Item Statistics
---------------

Overview
--------

This demonstrates computing a number of potentially useful statistics

Definition
----------

This is also known as Pareto or 80/20 rule

`https://en.wikipedia.org/wiki/Pareto\_principle <https://en.wikipedia.org/wiki/Pareto_principle>`__

* Top 20 percent of sales items are rated A

* Next 60 percent rated B

* Bottom 20 Rated C

This has the following problems, an item may be at 21% but is indistinguishable from a 79

Approach
--------

-  Create a table to hold statistics

-  Create a script to populate statistics by item

-  Create a service to obtain the data model for the web page

-  create an angular 8 controller :ref:`label-name`

-  Modify the filter screen to allow query filters on the statistics

-  Modify the web pages to show the statistics information

Purpose
-------

Concentrate inventory and dollars on

-  high volume,

-  high profit item

-  hightest service leve

-  core products


.. code:: syntaxhighlighter-pre

package com.pacificdataservices.diamond.apsweb;

import java.io.IOException; import java.sql.Connection; import
java.sql.SQLException;

import javax.sql.DataSource;

import org.javautil.core.json.JsonSerializer; import
org.javautil.core.json.JsonSerializerGson; import
org.javautil.core.sql.Binds; import org.javautil.core.sql.SqlStatement;
import org.javautil.util.NameValue; import org.slf4j.Logger; import
org.slf4j.LoggerFactory; import
org.springframework.beans.factory.annotation.Autowired; import
org.springframework.web.bind.annotation.RequestMapping; import
org.springframework.web.bind.annotation.RequestParam; import
org.springframework.web.bind.annotation.RestController;

@RestController public class IcItemStatController {

    private Logger logger = LoggerFactory.getLogger(getClass());
    @Autowired private DataSource datasource;

@RequestMapping("/icItemStat") public String planData(
    @RequestParam(value="itemNbr") String itemNbr) throws SQLException,
    IOException { `logger.info <http://logger.info>`__\ ("invoked with
    itemNumber {}",itemNbr); Connection conn =
    datasource.getConnection(); SqlStatement ss = new SqlStatement(conn,
    "select \* from ic\_item\_stat where item\_nbr = :item\_nbr"); Binds
    binds = new Binds(); binds.put("item\_nbr", itemNbr); NameValue
    nameValue = ss.getNameValue(binds,true); JsonSerializer serializer =
    new JsonSerializerGson(); String json =
    serializer.toJsonPretty(nameValue); return json; }

`https://www.briantracy.com/blog/personal-success/how-to-use-the-80-20-rule-pareto-principle/ <https://www.briantracy.com/blog/personal-success/how-to-use-the-80-20-rule-pareto-principle/>

}

Create a node service
~~~~~~~~~~~~~~~~~~~~~

.. code:: syntaxhighlighter-pre

i    import { HttpClient } from '@angular/common/http';
    import { Observable } from 'rxjs';
    ...
    getIcItemStat(): Observable<IcItemStat[]> {
         return this.http.get<IcItemStat[]>(HOST + '/api/v1/icitemstat/' + itemnbr);
     }

Modify web page template
------------------------

`https://en.wikipedia.org/wiki/Pareto\_principle <https://en.wikipedia.org/wiki/Pareto_principle>`__

`https://www.briantracy.com/blog/personal-success/how-to-use-the-80-20-rule-pareto-principle/ <https://www.briantracy.com/blog/personal-success/how-to-use-the-80-20-rule-pareto-principle/>`__


#. `Business Process Improvement <index.html>`__
#. `Project Description <Project-Description_786630.html>`__
#. `Diamond Portal <Diamond-Portal_4653081.html>`__
#. `Portal Functionality <Portal-Functionality_4653133.html>`__
#. `Purchasing <Purchasing_4030570.html>`__
#. `ABC Code Overview <ABC-Code-Overview_4063370.html>`__

Item Statistics
---------------







Item Statistics Fields
----------------------

**Name**

**Code**

**Description**

**Benefit**

**Disadvantage**

**Compare to**

ABC

ABCSLS

Top 20 of previous12 month contribution to sales dollars

Does not adequately support new product introduction

ABCUSTQUOTE

Top 20 percent of CUST OPEN Quotes

ABCSLSPC ABC Sales Percent
^^^^^^^^^^^^^^^^^^^^^^^^^^

Similar to ABC

Approach
--------

-  Create a table to hold statistics

-  Create a script to populate statistics by item

-  Create a service to obtain the data model for the web pages

-  Modify the filter screen to allow query filters on the statistics

-  Modify the web pages to show the statistics information